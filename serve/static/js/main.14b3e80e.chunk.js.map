{"version":3,"sources":["App.js","index.js"],"names":["ParamsExample","path","children","Child","id","useParams","href","download","ReactDOM","render","document","getElementById"],"mappings":"4LAee,SAASA,IACtB,OACE,cAAC,IAAD,UACE,8BACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,OAAOC,SAAU,cAACC,EAAD,YAOvC,SAASA,IAAQ,IAGTC,EAAOC,cAAPD,GAEN,OACE,gCACE,sCAASA,KAEX,mBAAGE,KAAI,2DAAsDF,GAAMG,UAAQ,EAA3E,SACE,iDCjCNC,IAASC,OACT,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.14b3e80e.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\n\n// Params are placeholders in the URL that begin\n// with a colon, like the `:id` param defined in\n// the route in this example. A similar convention\n// is used for matching dynamic segments in other\n// popular web frameworks like Rails and Express.\n\nexport default function ParamsExample() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/:id\" children={<Child />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Child() {\n  // We can use the `useParams` hook here to access\n  // the dynamic pieces of the URL.\n  let { id } = useParams();\n\n  return (\n    <div>\n      <h3>ID: {id}</h3>\n\n    <a href={`http://goraesan2021.cafe24.com:5010/api/v1/media/${id}`} download>\n      <span>download</span>\n    </a>\n    </div>\n\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root')\n);"],"sourceRoot":""}